<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog</title>
    <link>https://ChinaXhm.github.io/</link>
    <description>Recent content on Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 13 Dec 2019 23:05:56 +0800</lastBuildDate>
    
	<atom:link href="https://ChinaXhm.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>List</title>
      <link>https://ChinaXhm.github.io/list/</link>
      <pubDate>Fri, 13 Dec 2019 23:05:56 +0800</pubDate>
      
      <guid>https://ChinaXhm.github.io/list/</guid>
      <description>链表(C语言) 1.节点定义 typedef int datatype;typedef struct node{node *next;datatype data;}N;//起别名2.初始化链表 N *creatlist()//采用尾插法建表;{N *head=(* N)malloc(sizeof(N)),*p=NULL;//定义头节点 if(head){printf(&amp;#34;动态申请内存失败\n&amp;#34;);}else{int n=0;head-&amp;gt;next=NULL;p=head-&amp;gt;next;printf(&amp;#34;请输入节点数:&amp;#34;);scanf(&amp;#34;%d&amp;#34;,&amp;amp;n);while(n){ N n=(* N)malloc(sizeof(N));n-&amp;gt;next=NULL;p-&amp;gt;next=n;p=n; }}}3.输出链表 void output(N *head){int i=0;N *a=headif(head==NULL){printf(&amp;#34;链表头有误\n&amp;#34;);}while(a-&amp;gt;next!=NULL){i++;a=a-&amp;gt;next;printf(&amp;#34;%d个元素的值为%d&amp;#34;,i,a-&amp;gt;next);}}</description>
    </item>
    
    <item>
      <title>Abcd</title>
      <link>https://ChinaXhm.github.io/abcd/</link>
      <pubDate>Thu, 12 Dec 2019 23:59:41 +0800</pubDate>
      
      <guid>https://ChinaXhm.github.io/abcd/</guid>
      <description>sadhasjdhjk #include &amp;#34;stdio.h&amp;#34;int main(){printf(&amp;#34;hello,Github&amp;#34;);return 0;}</description>
    </item>
    
    <item>
      <title>数组增删查</title>
      <link>https://ChinaXhm.github.io/array/</link>
      <pubDate>Thu, 12 Dec 2019 21:26:24 +0800</pubDate>
      
      <guid>https://ChinaXhm.github.io/array/</guid>
      <description> 增加(插入)
 1.在数组末尾添加元素
  int add(int nums[],int *numsSize,int value)//直接放在数组最后面 { nums[*numsSize]=value; *numsSize+=1; return *numsSize; }   2.在数组某位置(下标位置)添加
  int insert(int nums[],int *numsSize,int index,int value)//指定插入下标位置 { int i=0; if(index&amp;lt;0||index&amp;gt;*numsSize) { return 0; } for(i=*numsSize;i&amp;gt;=index;i--)//首先index 值后的元素全部后移，从最后一个元素开始 	//然后index位置插入值; 	{ nums[i+1]=nums[i]; } nums[index]=value; *numsSize+=1;//*numsSize++,自加一优先级比*高 	return 1; } </description>
    </item>
    
    <item>
      <title>Data Structure</title>
      <link>https://ChinaXhm.github.io/test/</link>
      <pubDate>Tue, 10 Dec 2019 13:15:24 +0800</pubDate>
      
      <guid>https://ChinaXhm.github.io/test/</guid>
      <description> 测试
 #include &amp;lt;stdio.h&amp;gt;int main(int argc, char* argv[]) {printf(&amp;#34;Hello Github\n&amp;#34;);return 0;}</description>
    </item>
    
  </channel>
</rss>